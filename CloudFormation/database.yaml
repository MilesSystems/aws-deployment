AWSTemplateFormatVersion: 2010-09-09
Description: Deploys an RDS database stack supporting Standard RDS, Aurora Serverless v1, and Aurora Serverless v2.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  VpcCidr:
    Type: String
    Default: 10.1.0.0/16

  DataSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  ServerlessVersion:
    Type: String
    Description: Deployment mode
    AllowedValues: ["none", "v1", "v2"]
    Default: "none"

  DatabaseEngine:
    Type: String
    AllowedValues: ["aurora", "aurora-mysql", "aurora-postgresql", "MySQL", "PostgreSQL"]
    Default: aurora-mysql

  DatabaseEngineVersion:
    Type: String
    Default: ""

  DatabaseInstanceType:
    Type: String
    AllowedValues:
      - db.t2.micro
      - db.t3.micro
      - db.t4g.micro
      - db.r5.large
    Default: db.t4g.micro

  DatabaseMasterUsername:
    Type: String
    Default: root
    MinLength: 4
    MaxLength: 16
    AllowedPattern: ^([a-zA-Z0-9]*)$

  DatabaseMasterPassword:
    Type: String
    NoEcho: true
    Default: password
    MinLength: 8
    MaxLength: 41
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\-])*$

  DatabaseName:
    Type: String
    AllowedPattern: ^([a-zA-Z0-9]*)$

  InstanceIdentifierPrefix:
    Type: String
    Default: mydb

  Port:
    Type: Number
    Default: 3306

  AllocatedStorage:
    Type: Number
    Default: 20

  BackupRetentionPeriod:
    Type: Number
    Default: 7

  StorageEncrypted:
    Type: String
    AllowedValues: [true, false]
    Default: true

  StorageType:
    Type: String
    Description: Specifies the storage type to be associated with the DB instance
    AllowedValues:
      - standard
      - gp2
      - io1
    Default: gp2

  PubliclyAccessible:
    Type: String
    AllowedValues: [true, false]
    Default: false

  MultiAZ:
    Type: String
    AllowedValues: [true, false]
    Default: false

  DeletionProtection:
    Type: String
    AllowedValues: [true, false]
    Default: false

  PreferredBackupWindow:
    Type: String
    Default: 23:25-23:55

  PreferredMaintenanceWindow:
    Type: String
    Default: Tue:03:00-Tue:06:00

  DatabaseClusterParameterGroupFamily:
    Type: String
    Default: mysql8.0

  ScalingConfigurationAutoPause:
    Type: String
    Default: true
    AllowedValues: [true, false]

  ScalingConfigurationMinCapacity:
    Type: String
    Default: 1

  ScalingConfigurationMaxCapacity:
    Type: String
    Default: 4

  ScalingConfigurationSecondsUntilAutoPause:
    Type: String
    Default: 1800

Conditions:
  UseStandardInstance: !Equals [!Ref ServerlessVersion, "none"]
  UseAuroraServerlessV1: !Equals [!Ref ServerlessVersion, "v1"]
  UseAuroraServerlessV2: !Equals [!Ref ServerlessVersion, "v2"]
  HasEngineVersion: !Not [!Equals [!Ref DatabaseEngineVersion, ""]]

Resources:
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows access to RDS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidr
          FromPort: !Ref Port
          ToPort: !Ref Port
          IpProtocol: tcp

  DataSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Subnet Group
      SubnetIds: !Ref DataSubnets

  RdsDBInstance:
    Condition: UseStandardInstance
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub "${InstanceIdentifierPrefix}-instance"
      AllocatedStorage: !Ref AllocatedStorage
      DBInstanceClass: !Ref DatabaseInstanceType
      Engine: !Ref DatabaseEngine
      MasterUsername: !Ref DatabaseMasterUsername
      MasterUserPassword: !Ref DatabaseMasterPassword
      DBName: !Ref DatabaseName
      StorageType: !Ref StorageType
      DBSubnetGroupName: !Ref DataSubnetGroup
      VPCSecurityGroups: [!Ref RdsSecurityGroup]
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      PubliclyAccessible: !Ref PubliclyAccessible
      MultiAZ: !Ref MultiAZ
      StorageEncrypted: !Ref StorageEncrypted
      DeletionProtection: !Ref DeletionProtection
      EngineVersion: !If [HasEngineVersion, !Ref DatabaseEngineVersion, !Ref "AWS::NoValue"]

  AuroraServerlessV1Cluster:
    Condition: UseAuroraServerlessV1
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: !Ref DatabaseEngine
      EngineMode: serverless
      DBClusterIdentifier: !Sub "${InstanceIdentifierPrefix}-v1-cluster"
      MasterUsername: !Ref DatabaseMasterUsername
      MasterUserPassword: !Ref DatabaseMasterPassword
      DBSubnetGroupName: !Ref DataSubnetGroup
      VpcSecurityGroupIds: [!Ref RdsSecurityGroup]
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      DeletionProtection: !Ref DeletionProtection
      ScalingConfiguration:
        AutoPause: !Ref ScalingConfigurationAutoPause
        MinCapacity: !Ref ScalingConfigurationMinCapacity
        MaxCapacity: !Ref ScalingConfigurationMaxCapacity
        SecondsUntilAutoPause: !Ref ScalingConfigurationSecondsUntilAutoPause
      StorageEncrypted: !Ref StorageEncrypted
      EngineVersion: !If [HasEngineVersion, !Ref DatabaseEngineVersion, !Ref "AWS::NoValue"]

  AuroraServerlessV2Cluster:
    Condition: UseAuroraServerlessV2
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: !Ref DatabaseEngine
      DBClusterIdentifier: !Sub "${InstanceIdentifierPrefix}-v2-cluster"
      MasterUsername: !Ref DatabaseMasterUsername
      MasterUserPassword: !Ref DatabaseMasterPassword
      DBSubnetGroupName: !Ref DataSubnetGroup
      VpcSecurityGroupIds: [!Ref RdsSecurityGroup]
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      DeletionProtection: !Ref DeletionProtection
      StorageEncrypted: !Ref StorageEncrypted
      ServerlessV2ScalingConfiguration:
        MinCapacity: !Ref ScalingConfigurationMinCapacity
        MaxCapacity: !Ref ScalingConfigurationMaxCapacity
      EngineVersion: !If [HasEngineVersion, !Ref DatabaseEngineVersion, !Ref "AWS::NoValue"]

Outputs:
  DatabaseEndpoint:
    Value: !If
      - UseStandardInstance
      - !GetAtt RdsDBInstance.Endpoint.Address
      - !If
        - UseAuroraServerlessV1
        - !GetAtt AuroraServerlessV1Cluster.Endpoint.Address
        - !GetAtt AuroraServerlessV2Cluster.Endpoint.Address

  DatabasePort:
    Value: !Ref Port

  SecurityGroupId:
    Value: !Ref RdsSecurityGroup
